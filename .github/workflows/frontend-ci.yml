name: Frontend CI

on:
  push:
    branches: [ main, development ]
    paths:
      - 'chatbot-widget/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'chatbot-widget/**'

# Limit permissions to minimum required
permissions:
  contents: write # Needed for auto-fixing package-lock.json
  checks: write # For test results
  pull-requests: write # For PR comments

jobs:
  verify-dependencies:
    name: Verify Dependencies
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: chatbot-widget
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.10.0'

      - name: Verify package-lock.json is up to date
        id: verify-lockfile
        continue-on-error: true
        run: |
          npm install --package-lock-only
          git diff --exit-code package-lock.json

      - name: Commit updated package-lock.json if needed
        if: steps.verify-lockfile.outcome == 'failure' && github.event_name == 'pull_request'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package-lock.json
          git commit -m "Update package-lock.json to match package.json [skip ci]"
          git push
          echo "::warning::package-lock.json was out of sync and has been updated. Please pull the latest changes."

  lint-type-check:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    needs: verify-dependencies
    defaults:
      run:
        working-directory: chatbot-widget
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.10.0'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install dependencies
        run: npm ci --legacy-peer-deps || npm install --legacy-peer-deps
        timeout-minutes: 10

      - name: ESLint
        run: npm run lint

      - name: TypeScript Check
        run: npm run typecheck

  test-build:
    name: Test & Build
    runs-on: ubuntu-latest
    needs: verify-dependencies
    defaults:
      run:
        working-directory: chatbot-widget
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.10.0'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install dependencies
        run: npm ci --legacy-peer-deps || npm install --legacy-peer-deps
        timeout-minutes: 10

      - name: Run Tests
        run: npm test -- --watchAll=false --coverage
        env:
          CI: true

      - name: Build
        run: npm run build
        env:
          CI: true
          NODE_ENV: production

      - name: Upload Coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info
          fail_ci_if_error: false
          flags: unittests
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: chatbot-widget/build
          retention-days: 7 